#[include mainsail.cfg]
#[include kiauh_macros.cfg]

[temperature_sensor raspberry_pi]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

[virtual_sdcard]
path: ~/gcode_files

[display_status]

[pause_resume]
recover_velocity: 50.0

[include timelapse.cfg]

# rezonancija

#[mcu rpi]
#serial: /tmp/klipper_host_mcu

#[adxl345]
#cs_pin: rpi:None

#[resonance_tester]
#accel_chip: adxl345
#probe_points:
#    114,114,20  # an example

[input_shaper]
shaper_freq_x: 49.8
shaper_type_x: mzv
shaper_freq_y: 41.8
shaper_type_y: ei

#shaper_freq_y: 35.2
#shaper_type_y: mzv

#shaper_freq_x: 33.55
#shaper_freq_y: 33.50
#shaper_type: mzv


[stepper_x]
step_pin: PB9
dir_pin: PC2
enable_pin: !PC3
microsteps: 16
endstop_pin: ^PA5
rotation_distance: 39.951991
position_endstop: 0
position_max: 253
homing_speed: 80


[stepper_y]
step_pin: PB7
dir_pin: PB8
enable_pin: !PC3
microsteps: 16
endstop_pin: ^PA6
position_endstop: 0
rotation_distance: 39.951991
position_min: -22
position_endstop: -22
position_max: 253
homing_speed: 80


[stepper_z]
step_pin: PB5
dir_pin: !PB6
enable_pin: !PC3
microsteps: 16
rotation_distance: 8.021594
#rotation_distance: 8.501234
#75,30 rotation_distance: 8.000000
endstop_pin: probe:z_virtual_endstop
position_max: 240
homing_speed: 10
position_min: -5



[extruder]
step_pin: PB3
dir_pin: PB4
enable_pin: !PC3
microsteps: 16
heater_pin: PA1
rotation_distance: 7.420311
#rotation_distance: 7.630065
nozzle_diameter: 0.400
filament_diameter: 1.750
#pressure_advance: 0.04855
pressure_advance: 0.02855
max_extrude_only_distance: 100
sensor_type: ATC Semitec 104GT-2
sensor_pin: PC5
control: pid
# tuned for stock hardware with 200 degree Celsius target
pid_Kp: 21.527
pid_Ki: 1.063
pid_Kd: 108.982
min_temp: 0
max_temp: 280
max_extrude_only_distance: 120.0 #add this line to your extruder section
min_extrude_temp: 175


[heater_bed]
heater_pin: PA2
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PC4
control: pid
pid_Kp: 54.027
pid_Ki: 0.770
pid_Kd: 948.182
min_temp: 0
max_temp: 130

[fan]
pin: PA0

[mcu]
serial: /dev/serial/by-id/usb-1a86_USB_Serial-if00-port0
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 300
max_z_velocity: 5
max_z_accel: 100
#max_accel: 7000
max_accel: 1000
#max_accel_to_decel: 7000
max_accel_to_decel: 1000
square_corner_velocity: 5


[board_pins]
aliases:
  EXP1_1=PC6,EXP1_3=PB10,EXP1_5=PB14,EXP1_7=PB12,EXP1_9=<GND>,
  EXP1_2=PB2,EXP1_4=PB11,EXP1_6=PB13,EXP1_8=PB15,EXP1_10=<5V>,
  PROBE_IN=PB0,PROBE_OUT=PB1,FIL_RUNOUT=PC6

[bltouch]
sensor_pin: ^PB1
control_pin: PB0
x_offset: -42
y_offset: 1
pin_move_time: 0.675
probe_with_touch_mode: True
speed: 5.0
lift_speed: 15
#speed: 5.0
#lift_speed: 20
samples: 8
samples_result: median
pin_up_reports_not_triggered: True
#samples_tolerance: 0.010
samples_tolerance: 0.015
samples_tolerance_retries: 12
stow_on_each_sample: False
sample_retract_dist: 0.8

[skew_correction]


[safe_z_home]
home_xy_position: 157, 130
speed: 90.0
z_hop: 15.0
z_hop_speed: 20.0

[screws_tilt_adjust]
screw1: 70,200
screw1_name: front left screw
screw2: 70,30
screw2_name: front right screw
screw3: 240,30
screw3_name: rear right screw
screw4: 240,200
screw4_name: rear left screw
horizontal_move_z: 8.
speed: 120
screw_thread: CW-M4

[bed_mesh]
speed: 170
horizontal_move_z: 8
#mesh_min: 40, 30
mesh_min: 10, 10
mesh_max: 209, 210
#probe_count: 5, 5
probe_count: 9, 9
algorithm: bicubic
fade_start: 1
fade_end: 10
fade_target: 0

[filament_motion_sensor FILAMENTS]
detection_length: 65.0
extruder: extruder
switch_pin: PA4
pause_on_runout: True
runout_gcode: 
    PAUSE
pause_delay: 1

[gcode_macro _bot_data]
variable_lapse_video_size: 0
variable_lapse_filename: 'None'
variable_lapse_path: 'None'
gcode:
    M118 Setting bot lapse variables
    

[gcode_macro M600]
gcode:
       PAUSE



# Enable object exclusion
[exclude_object]

[gcode_macro M486]
gcode:
  # Parameters known to M486 are as follows:
  #   [C<flag>] Cancel the current object
  #   [P<index>] Cancel the object with the given index
  #   [S<index>] Set the index of the current object.
  #       If the object with the given index has been canceled, this will cause
  #       the firmware to skip to the next object. The value -1 is used to
  #       indicate something that isn’t an object and shouldn’t be skipped.
  #   [T<count>] Reset the state and set the number of objects
  #   [U<index>] Un-cancel the object with the given index. This command will be
  #       ignored if the object has already been skipped

  {% if 'exclude_object' not in printer %}
    {action_raise_error("[exclude_object] is not enabled")}
  {% endif %}

  {% if 'T' in params %}
    EXCLUDE_OBJECT RESET=1

    {% for i in range(params.T | int) %}
      EXCLUDE_OBJECT_DEFINE NAME={i}
    {% endfor %}
  {% endif %}

  {% if 'C' in params %}
    EXCLUDE_OBJECT CURRENT=1
  {% endif %}

  {% if 'P' in params %}
    EXCLUDE_OBJECT NAME={params.P}
  {% endif %}

  {% if 'S' in params %}
    {% if params.S == '-1' %}
      {% if printer.exclude_object.current_object %}
        EXCLUDE_OBJECT_END NAME={printer.exclude_object.current_object}
      {% endif %}
    {% else %}
      EXCLUDE_OBJECT_START NAME={params.S}
    {% endif %}
  {% endif %}

  {% if 'U' in params %}
    EXCLUDE_OBJECT RESET=1 NAME={params.U}
  {% endif %}

# end exclude section

[gcode_macro PAUSE]
description: Pause the actual running print
rename_existing: PAUSE_BASE
gcode:
    ##### set defaults #####
    {% set x = params.X|default(10) %}      #edit to your park position
    {% set y = params.Y|default(10) %}      #edit to your park position
    {% set z = params.Z|default(10)|float %} #edit to your park position
    {% set e = params.E|default(1) %}        #edit to your retract length
    ##### calculate save lift position #####
    {% set max_z = printer.toolhead.axis_maximum.z|float %}
    {% set act_z = printer.toolhead.position.z|float %}
    {% set lift_z = z|abs %}
    {% if act_z < (max_z - lift_z) %}
        {% set z_safe = lift_z %}
    {% else %}
        {% set z_safe = max_z - act_z %}
    {% endif %}
    ##### end of definitions #####
    PAUSE_BASE
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E-{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}
    {% if "xyz" in printer.toolhead.homed_axes %}    
      G1 Z{z_safe}
      G90
      G1 X{x} Y{y} F6000
    {% else %}
      {action_respond_info("Printer not homed")}
    {% endif %}


[gcode_macro RESTARTPRINTER]
gcode:
        FIRMWARE_RESTART


   

[gcode_macro RESUME]
description: Resume the actual running print
rename_existing: RESUME_BASE
gcode:
    ##### set defaults #####
    {% set e = params.E|default(1) %} #edit to your retract length
    #### get VELOCITY parameter if specified ####
    {% if 'VELOCITY' in params|upper %}
      {% set get_params = ('VELOCITY=' + params.VELOCITY)  %}
    {%else %}
      {% set get_params = "" %}
    {% endif %}
    ##### end of definitions #####
    G91
    {% if printer.extruder.can_extrude|lower == 'true' %}
      G1 E{e} F2100
    {% else %}
      {action_respond_info("Extruder not hot enough")}
    {% endif %}  
    RESUME_BASE {get_params}




[gcode_macro CANCEL_PRINT]
rename_existing: CANCEL_PRINT_BASE
gcode:
        TURN_OFF_HEATERS
        CLEAR_PAUSE
        G91 ; Set coordinates to relative
        G1 F1800 E-3 ; Retract filament 3 mm to prevent oozing
        G1 F3000 Z20 ; raise head
        G90 ; Set coordinates to absolute
        G1 X10 Y200 F5000.0 ; Move to start position
        M106 S0
        M84
        BED_MESH_PROFILE REMOVE=default
        FIRMWARE_RESTART

#[gcode_macro G29]
#gcode:
#  G28
#  BED_MESH_CALIBRATE METHOD=automatic

[gcode_macro BED_MESH_CALIBRATE]
rename_existing: BED_MESH_CALIBRATE_BASE
gcode:
    G28
    {% set mesh_delta = 25 %} ;; distance between points
    {% set x_mesh_max = 7 %} ;; max points on x-axis
    {% set y_mesh_max = 7 %} ;; max points on y-axis
    {% set mesh_area_offset = 0 %};; the clearance between print area and probe area
    {% set parameter_AREA_START = "0,0" %} ;; gcode parameter to be defined by slicer
    {% set parameter_AREA_END = "0,0" %} ;; gcode parameter to be defined by slicer
    {% if params.AREA_START and params.AREA_END %}
        ;; get [bltouch] config parameters
        {% set BLTouchConfig = printer["configfile"].config["bltouch"] %}
        {% set probe_samples = BLTouchConfig.samples|int %}
        {% set probe_samples_tolerance_retries = BLTouchConfig.samples_tolerance_retries|int %}
        {% set probe_samples_tolerance = BLTouchConfig.samples_tolerance|float %}
        {% set probe_sample_retract_dist = BLTouchConfig.sample_retract_dist|float %}
        {% set probe_samples_result = samples_result %}

        ;; get [bed_mesh] config parameters
        {% set bedMeshConfig = printer["configfile"].config["bed_mesh"] %}
        {% set mesh_algorithm = bedMeshConfig.algorithm %}
        #{% set mesh_bicubic_tension = bedMeshConfig.bicubic_tension|float %}
        {% set safe_min_x = bedMeshConfig.mesh_min.split(",")[0]|float %}
        {% set safe_min_y = bedMeshConfig.mesh_min.split(",")[1]|float %}
        {% set safe_max_x = bedMeshConfig.mesh_max.split(",")[0]|float %}
        {% set safe_max_y = bedMeshConfig.mesh_max.split(",")[1]|float %}
        {% set meshPointX = bedMeshConfig.probe_count.split(",")[0]|int %}
        {% set meshPointY = bedMeshConfig.probe_count.split(",")[1]|int %}
        {% set meshMaxPointX = meshPointX %}
        {% set meshMaxPointY = meshPointY %}

        ;; get print area min/max from slicer gcode
        {% set area_min_x = params.AREA_START.split(",")[0]|float %}
        {% set area_min_y = params.AREA_START.split(",")[1]|float %}
        {% set area_max_x = params.AREA_END.split(",")[0]|float %}
        {% set area_max_y = params.AREA_END.split(",")[1]|float %}

        ;; check if print area min/max from slicer gcode is compatable with [bed_mesh] min/max
        {% if (area_min_x < area_max_x) and (area_min_y < area_max_y) %}
        ;; set probing area
            {% if area_min_x - mesh_area_offset >= safe_min_x %}
                {% set area_min_x = area_min_x - mesh_area_offset %}
            {% else %}
                {% set area_min_x = safe_min_x %}
            {% endif %}
            {% if area_min_y - mesh_area_offset >= safe_min_y %}
                {% set area_min_y = area_min_y - mesh_area_offset %}
            {% else %}
                {% set area_min_y = safe_min_y %}
            {% endif %}
            {% if area_max_x + mesh_area_offset <= safe_max_x %}
                {% set area_max_x = area_max_x + mesh_area_offset %}
            {% else %}
                {% set area_max_x = safe_max_x %}
            {% endif %}
            {% if area_max_y + mesh_area_offset <= safe_max_y %}
                {% set area_max_y = area_max_y + mesh_area_offset %}
            {% else %}
                {% set area_max_y = safe_max_y %}
            {% endif %}

                ;; set probe counts
            {% if (area_max_x - area_min_x) / 3 < mesh_delta %}
                {% set meshPointX = 3 %}
            {% elif (area_max_x - area_min_x) / 5 < mesh_delta %}
                {% set meshPointX = 5 %}
            {% elif (area_max_x - area_min_x) / 7 < mesh_delta %}
                {% set meshPointX = 7 %}
            {% elif (area_max_x - area_min_x) / 9 < mesh_delta %}
                {% set meshPointX = 9 %}
            {% elif (area_max_x - area_min_x) / 11 < mesh_delta %}
                {% set meshPointX = 11 %}
            {% endif %}
            {% if (area_max_y - area_min_y) / 3 < mesh_delta %}
                {% set meshPointY = 3 %}
            {% elif (area_max_y - area_min_y) / 5 < mesh_delta %}
                {% set meshPointY = 5 %}
            {% elif (area_max_y - area_min_y) / 7 < mesh_delta %}
                {% set meshPointY = 7 %}
            {% elif (area_max_y - area_min_y) / 9 < mesh_delta %}
                {% set meshPointY = 9 %}
            {% elif (area_max_y - area_min_y) / 11 < mesh_delta %}
                {% set meshPointY = 11 %}
            {% endif %}

                ;; check probe count vs max
            {% if meshPointX > x_mesh_max %}
                {% set meshPointX = x_mesh_max %}
            {% endif %}
            {% if meshPointY > y_mesh_max %}
                {% set meshPointY = y_mesh_max %}
            {% endif %}

                ;; check for 7x3 or 3x7 mesh
            {% if meshPointX > 5 %}
                {% if meshPointY == 3 %} # 7x3 mesh invlaid for bicubic
                    {% set meshPointY = 5 %} # set 7x5 mesh
                {% endif %}
            {% endif %}
            {% if meshPointY > 5 %}
                {% if meshPointX == 3 %} # 3x7 mesh invlaid for bicubic
                    {% set meshPointX = 5 %} # set 5x7 mesh
                {% endif %}
            {% endif %}

            ;; set new reference index point
            {% set referenceIndex = (meshPointX * meshPointY / 2 - 1 )|round(0)|int %}

            ;; send bed mesh parameters
            M117 Mesh {meshPointX}x{meshPointY}
            M118 Mesh {meshPointX}x{meshPointY}
            M118 PROBE samples={probe_samples} sample_retract_dist={probe_sample_retract_dist} samples_tolerance={probe_samples_tolerance} samples_tolerance_retries={probe_samples_tolerance_retries} samples_result={probe_samples_result}
            M118 BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} relative_reference_index={referenceIndex} algorithm={mesh_algorithm}
            PROBE samples={probe_samples} sample_retract_dist={probe_sample_retract_dist} samples_tolerance={probe_samples_tolerance} samples_tolerance_retries={probe_samples_tolerance_retries} samples_result={probe_samples_result}
            BED_MESH_CALIBRATE_BASE mesh_min={area_min_x},{area_min_y} mesh_max={area_max_x},{area_max_y} probe_count={meshPointX},{meshPointY} relative_reference_index={referenceIndex} algorithm={mesh_algorithm}
        {% else %}
            BED_MESH_CALIBRATE_BASE
        {% endif %}
    {% else %}
        BED_MESH_CALIBRATE_BASE
    {% endif %} 

[gcode_macro LOAD_FILAMENT]
gcode:
        SAVE_GCODE_STATE NAME=LOAD_FILAMENT
        M83
        G92 E0.0
        G1 E20 F100
        G92 E0.0
        RESTORE_GCODE_STATE NAME=LOAD_FILAMENT MOVE=1


[gcode_macro UNLOAD_FILAMENT]
gcode:
        SAVE_GCODE_STATE NAME=UNLOAD_FILAMENT
        G1 E0.5 F1000
        G1 E-0.5 F1000
        G1 E1.0 F1000
        G1 E-1.0 F1000
        G1 E1.5 F1000
        G1 E-1.5 F1000
        G1 E2.0 F1000
        G1 E-100 F3000
        G92 E0.0
        RESTORE_GCODE_STATE NAME=UNLOAD_FILAMENT MOVE=1

[gcode_macro ALL_HOME]
gcode:
        G28

#*# <---------------------- SAVE_CONFIG ---------------------->
#*# DO NOT EDIT THIS BLOCK OR BELOW. The contents are auto-generated.
#*#
#*# [bltouch]
#*# z_offset = 4.515
#*#
#*# [skew_correction my_skew_profile]
#*# xy_skew = -0.00239736859563
#*# xz_skew = 0.0
#*# yz_skew = 0.0
